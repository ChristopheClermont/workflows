name: Maven Build

on:
  workflow_call:
    inputs:
      mavenPhases:
        type: string
        description: "Maven phases to execute"
        required: false
        default: "deploy site"
      jdkVersion:
        type: string
        description: "Version of the JDK to setup and use"
        required: false
        default: "17"
      nodeVersion:
        type: string
        description: "Version of Node.js to setup and use (if needed)"
        required: false
        default: ""
      debug:
        type: string
        description: "Enable Maven debug"
        required: false
        default: "false"
      ssh:
        type: string
        description: "Enable SSH session to the runner"
        required: false
        default: "false"
        
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ inputs.jdkVersion }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.jdkVersion }}
        distribution: temurin
        cache: maven

    - name: Set up Maven settings.xml
      uses: s4u/maven-settings-action@v3.0.0
      with:
        sonatypeSnapshots: true
        servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'
        properties: '[{"altDeploymentRepository": "github::default::https://maven.pkg.github.com/${{ github.repository }}"}, {"altReleaseDeploymentRepository": "github::default::https://maven.pkg.github.com/${{ github.repository }}"}]'

    - name: Setup Node.js ${{ inputs.nodeVersion }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.nodeVersion }}
        cache: npm
      if: ${{ inputs.nodeVersion != '' }}
    
    - name: Setup tmate SSH session
      uses: mxschmitt/action-tmate@v3
      if: ${{ inputs.ssh == 'true' }}
      with:
        detached: true

    - name: Configure Maven debug flag
      run: echo "debugFlag=--debug" >> $GITHUB_ENV
      if: ${{ inputs.debug == 'true' }}
      
    - name: Build with Maven
      run: mvn ${{ env.debugFlag }} --batch-mode  --file pom.xml clean ${{ inputs.mavenPhases }}
